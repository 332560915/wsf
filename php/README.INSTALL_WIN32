Building and Installing WSO2 WSF/PHP on Win32.

If you need any help with building or installation , send a 
mail to wsf-PHP-user@lists.wso2.net
===========================================================
Contents:
1. How to build PHP under Windows
2. How to build wsf_c under Windows from source
    a. Requirements
    b. Using command prompt.
3. Building WSF extension
4. Installing WSF extension as a PHP extension.

===========================================================

1. How to build PHP under Windows.
    Please refer to README.WIN32-BUILD-SYSTEM file that comes 
    with PHP source distribution.

2. How to build wsf_c under Windows from source

    a. Requirements

	You need to download following:

	libxml2 binary distribution
        zlib binary distribution
        iconv binary distribution
	OpenSSL binary distribution
        
    b. Using the command prompt            

	If you have Visual Studio command prompt, open it change 
	directory to wso2-wsf-php-src extract folder.
	
	If not, create a new shortcut and set target to:
	
	%comspec% /k "C:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\bin\vcvars32.bat"
	
	Now change directory to wso2-wsf-php-src extract directory and edit 
	the configure.in file and set your binary installation 
	locations of libxml2, zlib and iconv , OpenSSL.

	Also you need to specify the php source directory and its binary build location
	to build the extension along with wsf_c. Please fill the following entries in 
	configure.in file.
	PHP_SRC_DIR, PHP_BIN_DIR and WIN32BUILD_DIR

	Once you have done it, run build.bat file in  wso2-wsf-php-src extract directory. This
	will build create the binary distribution.

3. Building WSO2 WSF with php win32 build system
                
    Before trying this, please refer README.WIN32-BUILD-SYSTEM
    file in PHP source distribution and build PHP source under Windows.
                
    Copy wsf_php folder to php_source/ext directory.

    Run "buildconf.bat" to rebuild the configre.js file.


    "cscript /nologo configure.js --help" will give the configuration options.
    You will find the option --with-wsf.

    Add following entries to config.nice.bat file.
	"--with-extra-includes=<Libxml2 bin dir>\include;<Iconv bin dir>\include;<zlib bi dir>\include;<wsf-c>\include;"
	"--with-extra-libs=<Libxml2 bin dir>\lib;<Iconv bin dir>\lib;<zlib bin dir>\lib;<wsf-c>\lib"
	--with-wsf=shared"

	
    Now run config.nice.bat file to generate the makefile.
   
    "nmake" will build wsf extension.

4. Installing WSO2 WSF as a PHP extension.

    If you have build from the source you should now have the
    	
	wsf_c binary and the wsf.dll.

    If you have extracted the binary you should have the following structure.

    wso2_wsf_1.0.alpha1-bin
                |  
	    	    +-- wsf_c 
	            |
                +-- wsf.dll
                      

    1. Copy wsf.dll to PHP installation directory.
    
    2. Add wsf_c\lib directory to path.

    3. Add the following entries to your php.ini file which is in your PHP 
       installation location.
       [wsf]
       wsf.home="<path_to_extract_folder>\wsf_c"                       
       wsf.log_path="<path_to_extract_folder>\wsf_c\logs"
       wsf.rm_db_dir="<path_to_extract_folder>\wsf_c>"
       wsf.log_level = 3
       extension=php_wsf.dll

       [Note] Log level is by default set to INFO. Log levels range from 0 to 4. Log levels are as follows.
	      CRITICAL->  0 , ERROR -> 1 , WARNING -> 2 , INFO -> 3, DEBUG -> 4
     
    5. Create an environment variable PHPRC to point to your php.ini file location.

    6. Configure the Apache2 Web server with PHP as follows.
       
       Copy php5apache2.dll to Apache2/modules directory.
       Add following entries in httpd.conf file.

       LoadModule php5_module modules/php5apache2.dll
       
       AddType application/x-httpd-php .php .phtml
       AddType application/x-httpd-php-source .phps
                              
    7. Copy the scripts folder and samples folder to your Web server's document root
       Now you should be able to run the samples in samples directory. 
       [Note] scripts folder contain the php scripts used for wsdl generation
                         		 	
 
