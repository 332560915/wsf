
        WSO2 WSF/Ruby
	    =============

VERSION
-------
1.0.0


INTRODUCTION
------------
- WSF/Ruby is the Ruby language extension to WSO2 WSF/C
  [http://www.wso2.org/projects/wsf/c]. This version enables you 
  to write client/service applications to consume/provide Web Services 
  respectively.


PREREQUISITES
-------------
- It is required to have WSO2 WSF/C installed in your machine 
  in order to compile and use this extension module.


CONFIGURATION
-------------
- The following configuration entries have to be added to the 'rbconfig.rb'.
  
  CONFIG["WSFC_HOME"] = "/your/wsfc/home/"
  CONFIG["WSF_LOG_DIR"] = "/where/the/log/files/should/reside/"
  CONFIG["WSF_LOG_LEVEL"] = "5"
    
	Valid Log Levels - 
	      "0" - CRITICAL
		  "1" - ERROR
		  "2" - WARNING
		  "3" - INFO
		  "4" - DEBUG
		  "5" - TRACE

    NOTE : Type "ruby -e 'puts $:'" in a console to find where this file is.
           It's /usr/local/lib/ruby/1.8/i686-linux/rbconfig.rb in my case.


INSTALLATION
------------
Linux
-----
1. Run "sudo sh build.sh" to setup the extension.

Windows
-------
1. Execute the following commands inside the root folder.
   ruby extconf-win32.rb
   nmake
   nmake install

2. Go to "wsservice" folder and execute the following commands.
   ruby extconf-win32.rb
   nmake
   nmake install


RUN SAMPLES
-----------
1. It is required to have Rails Framework installed in your machine to run 
   the Rails samples in
     - samples/consumer/rails and
	 - samples/provider

2. Start "axis2_http_server" that comes with WSO2 WSF/C to run
   other consumer samples.


FEATURES
--------
Consumer
  - Support for REST
  - Support for SOAP 1.1
  - Support for SOAP 1.2
  - Support for SOAP MTOM
  - Support for WS-Addressing
  - Support for WS-Security (with Rampart)
  - Support for WS-Policy
  - Support for WS-SecurityPolicy
  - Support for WS-ReliableMessaging (with Sandesha)

Provider
  - Support for REST
  - Support for SOAP 1.1
  - Support for SOAP 1.2
  - Support for SOAP MTOM
  - Support for WS-Addressing
  - Support for WS-Security (with Rampart)
  - Support for WS-Policy
  - Support for WS-SecurityPolicy
  - Support for WS-ReliableMessaging (with Sandesha)
