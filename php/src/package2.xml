<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.4.2" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0
					http://pear.php.net/dtd/tasks-1.0.xsd
					http://pear.php.net/dtd/package-2.0
					http://pear.php.net/dtd/package-2.0.xsd">
					<name>wsf</name>
 <channel>pecl.php.net</channel>
 <summary>Web Services for PHP</summary>
 <description>This extension provides a web services implementation using WSO2 WSF/C Web Services Framework</description>
 <lead>
  <name>Nabeel Yoosuf</name>
  <user>nabeel</user>
  <email>nabeel@php.net</email>
  <active>yes</active>
 </lead>

   <date>2007-07-27</date>
   <version>
    <release>1.0.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>1. 0 release </notes>

 <contents>
  <dir name="/">
   <file name="config.m4" role="src" />
   <file name="README.SSL_CLIENT" role="doc" />
   <file name="wsf.c" role="src" />
   <file name="wsf_client.c" role="src" />
   <file name="wsf_client.h" role="src" />
   <file name="wsf_common.h" role="src" />
   <file name="wsf.h" role="src" />
   <file name="wsf_out_transport_info.c" role="src" />
   <file name="wsf_out_transport_info.h" role="src" />
   <file name="wsf_policy.c" role="src" />
   <file name="wsf_policy.h" role="src" />
   <file name="wsf_soap.c" role="src" />	
   <file name="wsf_soap.h" role="src" />
   <file name="wsf_stream.c" role="src" />
   <file name="wsf_stream.h" role="src" />
   <file name="wsf_util.c" role="src" />
   <file name="wsf_util.h" role="src" />
   <file name="wsf_worker.c" role="src" />
   <file name="wsf_worker.h" role="src" />
   <file name="wsf_xml_msg_recv.c" role="src" />
   <file name="wsf_xml_msg_recv.h" role="src" />
   <file name="php_encoding.c" role="src" />
   <file name="php_encoding.h" role="src" />
   <file name="php_http.c" role="src" />
   <file name="php_http.h" role="src" />
   <file name="php_schema.c" role="src" />
   <file name="php_schema.h" role="src" />
   <file name="php_sdl.c" role="src" />
   <file name="php_sdl.h" role="src" />
   <file name="php_xml.c" role="src" />
   <file name="php_xml.h" role="src" />
  </dir> <!-- / -->
 </contents>
 <dependencies>
  <required>
   <php>
    <min>5.0.3</min>
   </php>
   <pearinstaller>
    <min>1.4.0</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>wsf</providesextension>
 <extsrcrelease />

 <changelog>
  <release>
   <date>2007-08-06</date>
   <version>
    <release>1.0.0</release>
    <api>1.0.0</api>
   </version>
   <stability>
    <release>1.0</release>
    <api>1.0</api>
   </stability>
   <license uri="http://www.php.net/license">PHP</license>
   <notes>1.0 release of wso2-wsf/php. 
1. Client API to consume Web services

      * WSMessage class to handle message level options
      * WSClient class with both one way and two way service invocation support
      * Option of using functions in place of object oriented API with ws_request
      
2. Service API to provide Web services

      * WSMessage class to handle message level options
      * WSService class with support for both one way and two way operations
      * Option of using functions in place of object oriented API with ws_reply

3. Attachments with MTOM

      * Binary optimized
      * Non-optimized (Base64 binary)

4. WS-Addressing

      * Version 1.0
      * Submission

5. WS-Security 
      * UsernameToken and Timestamp 
      * Encryption
      * Signing
      * WS-SecurityPolicy based configuration  
         
6. WS-Reliable Messaging
      * Single channel two way reliable messaging

7. WSDL Generation for Server Side
      * WSDL generation based on annotations and function signatures, and 
        serving on ?wsdl requests

8. REST Support
      * Expose a single service script both as SOAP and REST service

9. WSDL mode support for both client and server side
      * Write services and client based on a given WSDL

10. Backward compatibility with PHP5 SOAP extension
      * Experimental

   </notes>
  </release>
 </changelog>
</package>


