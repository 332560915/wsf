Building and Installing WSO2 WSF/PHP from Source on Linux.

===========================================================

Go to the directory where you have extracted the source distribution.
Run the following:    
    ./configure
    make
    make install
Note: You may require super user privileges to run 'make install' on your system.

After installing the extension, you have to edit the php.ini file
and add the following line to the php.ini file:

extension=wsf.so

set the extension_dir entry to point to your extensions directory. IF you installed PHP from PHP source,
this would be /usr/local/lib/php/extensions/debug-zts-***/
extension_dir =" /usr/local/lib/php/extensions/debug-zts-20060613/"

Then enable php_xsl extension. 
extension=xsl.so.
If you installed PHP from source, go to xsl extension directory of the source folder and do 
./phpize
./configure
./make
./make install

Now you are ready to use WSO2 WSF/PHP.
Copy the scripts folder to your Web server's document root.
If your are running your clients on the shell, copy the scripts folder to your current working directory.
Also copy the samples folder to your Web server's document root.
Test with a Web browser; as an example access http://localhost/samples/echo_client.php

[NOTES:
    You may run './configure --help' for more information on configure options.

    If you don't provide the --prefix configure option, WSO2 WSF/PHP 
    will by default be installed into the PHP extensions directory.
    

    If you provide the --prefix configure option you will have to
    edit the php.ini file in your system and add the following entry.
    Note that WSO2 WSF/C would be installed to a folder named "wsf_c"
    in the prefix folder.

[wsf]
wsf.home="<path to your wsf_c installation directory>" { this entry is optional}
wsf.log_level = 3

  { Log level is by default set to ERROR. Log levels range from 0 to 4. Log levels are as follows.
    CRITICAL->  0 , ERROR -> 1 , WARNING -> 2 , INFO -> 3, DEBUG -> 4 }

END of NOTES]
